name: GOAT Compile
on:
  push:
    branches:
      - main
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: "Compilacion"
        run: ./mvnw clean install
      - name: "Verificar paquete"
        run: ls -ltra target
      - name: "Dependency Check"
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'HTML'
          out: 'reports'
      - name: "Verificar reporte"
        run: ls -ltra reports
 
      - name: "Horusec"
        run: curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta
      - name: Contenedor Docker
        run: |
          docker build -t prueba .
          docker images
          docker run --name webgoat -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 prueba
          docker ps -a
 
      - name: Acuasecurity
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
        # trivy image prueba
 
      - name: Escaneo de culnerabilidades con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'prueba'
          timeout: 10m0s
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          scanners: vuln,secret,config
        continue-on-error: true
 
      - name: Arachni
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          docker inspect webgoat | grep "IPAddress" | xargs | cut -d ',' -f 2 | awk '{print $2}' > ipp
          ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://ipp:8080/WebGoat/login
      - name: Parando y eliminando contenedorr
        run: |
          docker container stop webgoat
          docker container rm webgoat